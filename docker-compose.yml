version: '3.8'

services:
  web_server:
   build: ./web-server
   expose:
     - "80"
   networks: 
      - external
   environment:
    - SRC_FOLDER=/src
    - EXERCISES_FOLDER=/exercises
   volumes: 
     - /home/hugo/code/docker/sf_interviewer/web-server:/src #Testing/Dev Only
     - exercises-contents:/exercises
     - /home/hugo/code/docker/sf_interviewer/web-server/jwt/server.key:/jwt/server.key
   command: /bin/sh -c 'cd $$SRC_FOLDER/src && npm run build'
   env_file: ./web-server/.env
   depends_on:
      - setup
   user: "1000" #Testing/Dev Only

  auth_server:
    image: node:17.1.0-alpine3.14
    expose: 
      - "80"
    networks:
      - internal
    volumes: 
      - ./auth_server/src:/src
      - ./auth_server/access.json:/access/access.json
    command: /bin/sh -c 'node /src/app.js'
    depends_on:
      - setup
    env_file: ./auth_server/.env

  vscode: 
    build: ./code-server/jailed
    expose: 
      - "80"
    networks:
      - isolate
    volumes:
      - exercises-contents:/jail/home/tester/exercises
    user: tester
    depends_on: 
      - setup

  nginx:
    build: ./nginx
    ports:
      - 443:443
    networks:
      - internal
      - external
      - isolate
    volumes:
      - /home/hugo/code/docker/sf_interviewer/nginx/nginx.conf:/usr/local/nginx/conf/nginx.conf
      - /home/hugo/code/docker/sf_interviewer/nginx/tls:/certs
    depends_on:
      - web_server
      - auth_server
      - vscode
    restart: always

  setup:
    build: ./setup
    volumes: 
      - exercises-contents:/exercises
    command:  >
      sh -c "cp -r /exercises_source/. /exercises && 
      chmod 777 -R /exercises &&
      echo 'Setup completed' && 
      exit 0"
    
networks:
  internal:
    internal: true
  isolate:
    internal: true
  external:
 
volumes:
  exercises-contents: